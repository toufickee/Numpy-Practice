{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"w_3_d_5_numpy.ipy","provenance":[],"authorship_tag":"ABX9TyMlUTLTJyTjXMUp2P+odrT+"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"58KIvZnRYAht","colab_type":"code","colab":{}},"source":["import numpy as np\n","rg=np.random.default_rng(1)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"pgzqYbLcZAZE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"38c6532e-86b2-4d44-a973-e4328193daab","executionInfo":{"status":"ok","timestamp":1590135530640,"user_tz":-360,"elapsed":1418,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["from numpy import newaxis\n","a=np.floor(10*rg.random((2,2)))\n","b=np.floor(10*rg.random((2,2)))\n","\n","a.shape"],"execution_count":22,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 2)"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"O40lnD_Aa5SH","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"767f8c8b-3557-474f-f75d-07db3e6377dc","executionInfo":{"status":"ok","timestamp":1590135109643,"user_tz":-360,"elapsed":1401,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["np.column_stack((a,b)).shape"],"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 4)"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"id":"yZU4ttK3bOGx","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"d3cd6187-81a1-4606-94b1-5e6911593972","executionInfo":{"status":"ok","timestamp":1590135197696,"user_tz":-360,"elapsed":1429,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["c=np.row_stack((a,b))\n","c.shape"],"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4, 2)"]},"metadata":{"tags":[]},"execution_count":18}]},{"cell_type":"code","metadata":{"id":"pHh4BFxMbUTT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"956c5566-b967-41cc-c5c7-f06a299a7241","executionInfo":{"status":"ok","timestamp":1590135179574,"user_tz":-360,"elapsed":1621,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["c[:,newaxis].shape"],"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4, 1, 2)"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"id":"Sn3G7RyrbbO-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"68033c59-6835-4739-e56c-9587998c70d8","executionInfo":{"status":"ok","timestamp":1590135378716,"user_tz":-360,"elapsed":1219,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["d=np.column_stack((a[:,newaxis],b[:,newaxis]))\n","d.shape"],"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 2, 2)"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"code","metadata":{"id":"hBzyhsOdd7oi","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":136},"outputId":"99599d91-b536-412a-9218-e47d0c75cb76","executionInfo":{"status":"ok","timestamp":1590135775690,"user_tz":-360,"elapsed":4538,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["e=np.row_stack((a[:,newaxis],b[:,newaxis]))\n","e"],"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[6., 7.]],\n","\n","       [[6., 9.]],\n","\n","       [[0., 5.]],\n","\n","       [[4., 0.]]])"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"tafN0he5ezMX","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"outputId":"f0b37585-a365-4a8f-bb45-dc4787cabbe6","executionInfo":{"status":"ok","timestamp":1590136473324,"user_tz":-360,"elapsed":1262,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["a=np.floor(10*rg.random((4,12)))\n","a"],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[8., 2., 2., 6., 8., 9., 1., 4., 8., 4., 5., 0.],\n","       [6., 9., 8., 8., 6., 2., 7., 2., 8., 0., 8., 1.],\n","       [3., 3., 6., 1., 3., 0., 2., 4., 1., 6., 3., 7.],\n","       [6., 4., 8., 6., 8., 3., 5., 1., 9., 2., 2., 0.]])"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"DIP5iMaagN1J","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":187},"outputId":"37d7a251-f8ab-4d27-d294-656a04273aac","executionInfo":{"status":"ok","timestamp":1590136485113,"user_tz":-360,"elapsed":1556,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["np.hsplit(a,3)"],"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[array([[8., 2., 2., 6.],\n","        [6., 9., 8., 8.],\n","        [3., 3., 6., 1.],\n","        [6., 4., 8., 6.]]), array([[8., 9., 1., 4.],\n","        [6., 2., 7., 2.],\n","        [3., 0., 2., 4.],\n","        [8., 3., 5., 1.]]), array([[8., 4., 5., 0.],\n","        [8., 0., 8., 1.],\n","        [1., 6., 3., 7.],\n","        [9., 2., 2., 0.]])]"]},"metadata":{"tags":[]},"execution_count":33}]},{"cell_type":"code","metadata":{"id":"IwjMKnudgywY","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"outputId":"956f8903-84ef-449a-8646-19c119468c93","executionInfo":{"status":"ok","timestamp":1590136576223,"user_tz":-360,"elapsed":927,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["v=np.vsplit(a,4)\n","v"],"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[array([[8., 2., 2., 6., 8., 9., 1., 4., 8., 4., 5., 0.]]),\n"," array([[6., 9., 8., 8., 6., 2., 7., 2., 8., 0., 8., 1.]]),\n"," array([[3., 3., 6., 1., 3., 0., 2., 4., 1., 6., 3., 7.]]),\n"," array([[6., 4., 8., 6., 8., 3., 5., 1., 9., 2., 2., 0.]])]"]},"metadata":{"tags":[]},"execution_count":39}]},{"cell_type":"code","metadata":{"id":"eqINzomknpym","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"678ef041-de17-445b-8f3c-492c31e76f00","executionInfo":{"status":"ok","timestamp":1590138191338,"user_tz":-360,"elapsed":2412,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["a=np.arange(12).reshape(3,4)\n","b=a\n","b is a"],"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":41}]},{"cell_type":"code","metadata":{"id":"gdB6BUeGn5cJ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"6087ab35-1a76-415c-98fa-a8b10a25fe77","executionInfo":{"status":"ok","timestamp":1590138243027,"user_tz":-360,"elapsed":1559,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["id(a)"],"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["140607267403216"]},"metadata":{"tags":[]},"execution_count":42}]},{"cell_type":"code","metadata":{"id":"_PKMn2VkoCHS","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"outputId":"eca1af61-e7c9-4914-de3b-d1aacd0b6819","executionInfo":{"status":"ok","timestamp":1590138398886,"user_tz":-360,"elapsed":1211,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["c=a.view()\n","c"],"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0,  1,  2,  3],\n","       [ 4,  5,  6,  7],\n","       [ 8,  9, 10, 11]])"]},"metadata":{"tags":[]},"execution_count":44}]},{"cell_type":"code","metadata":{"id":"N4MIlH41o-yR","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"c43508cb-3746-4032-f244-f8aa7db59cdb","executionInfo":{"status":"ok","timestamp":1590138592350,"user_tz":-360,"elapsed":2189,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["c.shape"],"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(3, 4)"]},"metadata":{"tags":[]},"execution_count":47}]},{"cell_type":"code","metadata":{"id":"-jfJq4n7phEq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"4c9d4873-28fd-4586-ded4-90eaa1f2f5f8","executionInfo":{"status":"ok","timestamp":1590138681758,"user_tz":-360,"elapsed":1364,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["print(c.flags.owndata)"],"execution_count":49,"outputs":[{"output_type":"stream","text":["False\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"aPukisWPpwXI","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"outputId":"9e25f6a5-8bd7-4462-c397-684205090e93","executionInfo":{"status":"ok","timestamp":1590138816121,"user_tz":-360,"elapsed":1547,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["c[0,3]=1234\n","a"],"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[   0,    1,    2, 1234],\n","       [   4,    5,    6,    7],\n","       [   8,    9,   10,   11]])"]},"metadata":{"tags":[]},"execution_count":51}]},{"cell_type":"code","metadata":{"id":"ewK-XCc-qejC","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"outputId":"4811fa0a-f4de-4df9-e4bc-82e2e2a36481","executionInfo":{"status":"ok","timestamp":1590138979681,"user_tz":-360,"elapsed":1257,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["s=a[:,1:3]\n","s"],"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 1,  2],\n","       [ 5,  6],\n","       [ 9, 10]])"]},"metadata":{"tags":[]},"execution_count":55}]},{"cell_type":"code","metadata":{"id":"G45CgVcuqnrR","colab_type":"code","colab":{}},"source":["s[:]=10\n"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"s5pE-sn7qw91","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"outputId":"f74b5408-ddab-483e-d01a-a6147d0deb87","executionInfo":{"status":"ok","timestamp":1590139040777,"user_tz":-360,"elapsed":1560,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["a"],"execution_count":58,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[   0,   10,   10, 1234],\n","       [   4,   10,   10,    7],\n","       [   8,   10,   10,   11]])"]},"metadata":{"tags":[]},"execution_count":58}]},{"cell_type":"code","metadata":{"id":"Jh6b9IhOrE4m","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"outputId":"9cd6ae9c-82c5-42a2-9817-4516787f03a3","executionInfo":{"status":"ok","timestamp":1590139214139,"user_tz":-360,"elapsed":1314,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["d=a.copy()\n","d[0,0]=111\n","d\n","a"],"execution_count":63,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[   0,   10,   10, 1234],\n","       [   4,   10,   10,    7],\n","       [   8,   10,   10,   11]])"]},"metadata":{"tags":[]},"execution_count":63}]},{"cell_type":"code","metadata":{"id":"4Gsn2MfAsjkW","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"915dd7f4-df9c-43a8-ddb6-36a243b9b8c4","executionInfo":{"status":"ok","timestamp":1590139479811,"user_tz":-360,"elapsed":1581,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["n=a\n","n is a"],"execution_count":65,"outputs":[{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":65}]},{"cell_type":"code","metadata":{"id":"MyiirVL5svrZ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"outputId":"2fd25d54-67d5-4186-896a-d7cf8b1036f0","executionInfo":{"status":"ok","timestamp":1590139538995,"user_tz":-360,"elapsed":1377,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["n[0,3]=0\n","a"],"execution_count":68,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0, 10, 10,  0],\n","       [ 4, 10, 10,  7],\n","       [ 8, 10, 10, 11]])"]},"metadata":{"tags":[]},"execution_count":68}]},{"cell_type":"code","metadata":{"id":"ZszPRQNFs8h_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"08320869-0e3c-4183-cd17-166179c24b43","executionInfo":{"status":"ok","timestamp":1590139694182,"user_tz":-360,"elapsed":1338,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["a=np.arange(int(1e8))\n","a.shape"],"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(100000000,)"]},"metadata":{"tags":[]},"execution_count":70}]},{"cell_type":"code","metadata":{"id":"Qw5g57dgtzXG","colab_type":"code","colab":{}},"source":["b=a[:1000].copy()"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"s0c8KgMpvk-Z","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"bb90c90a-79fd-4489-a0b8-9dc83d2855ac","executionInfo":{"status":"ok","timestamp":1590140320795,"user_tz":-360,"elapsed":1393,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["a=np.arange(12)**2\n","i=np.array([1,11,3,8,7])\n","a[i]"],"execution_count":72,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([  1, 121,   9,  64,  49])"]},"metadata":{"tags":[]},"execution_count":72}]},{"cell_type":"code","metadata":{"id":"Q0AHkVXuwpot","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"36807c29-1f90-42be-ce58-c7a8562c340c","executionInfo":{"status":"ok","timestamp":1590140586390,"user_tz":-360,"elapsed":2227,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["j=np.array([[2,4],[9,7]])\n","j.shape"],"execution_count":73,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 2)"]},"metadata":{"tags":[]},"execution_count":73}]},{"cell_type":"code","metadata":{"id":"EM6GeuSPxAD-","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"3168b599-831c-491d-ac04-e2207d4619af","executionInfo":{"status":"ok","timestamp":1590140607908,"user_tz":-360,"elapsed":1849,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["a[j]"],"execution_count":74,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 4, 16],\n","       [81, 49]])"]},"metadata":{"tags":[]},"execution_count":74}]},{"cell_type":"code","metadata":{"id":"BYxhsoRmxdPD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":85},"outputId":"0cd7bbf6-7e33-4160-ba4a-62e17cbe3c06","executionInfo":{"status":"ok","timestamp":1590141027568,"user_tz":-360,"elapsed":1421,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["pale=np.array([[0,0,0],\n","               [255,0,0],\n","               [0,255,0],\n","               [0,0,255],\n","               [255,255,255]])\n","image=np.array([0,1,2,0])\n","pale[image]"],"execution_count":78,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[  0,   0,   0],\n","       [255,   0,   0],\n","       [  0, 255,   0],\n","       [  0,   0,   0]])"]},"metadata":{"tags":[]},"execution_count":78}]},{"cell_type":"code","metadata":{"id":"uBClpwyAzAHz","colab_type":"code","colab":{}},"source":["a=np.arange(12).reshape(3,4)\n","i=np.array([[0,1],\n","            [1,2]])\n","j=np.array([[2,1],\n","            [2,2]])"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"BIiJaUEZzaZo","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":68},"outputId":"23af7ed9-5d19-482c-8a3b-1c721e745460","executionInfo":{"status":"ok","timestamp":1590142512891,"user_tz":-360,"elapsed":1458,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["a[i,j]\n","a"],"execution_count":89,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0,  1,  2,  3],\n","       [ 4,  5,  6,  7],\n","       [ 8,  9, 10, 11]])"]},"metadata":{"tags":[]},"execution_count":89}]},{"cell_type":"code","metadata":{"id":"qF4LaJrG345M","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":102},"outputId":"a6aa08d0-2278-4681-99d4-7acd0973e105","executionInfo":{"status":"ok","timestamp":1590142709945,"user_tz":-360,"elapsed":1563,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["a[i]"],"execution_count":93,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[ 0,  1,  2,  3],\n","        [ 4,  5,  6,  7]],\n","\n","       [[ 4,  5,  6,  7],\n","        [ 8,  9, 10, 11]]])"]},"metadata":{"tags":[]},"execution_count":93}]},{"cell_type":"code","metadata":{"id":"jG4gkh4T5Dc4","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"c77a32cc-4e07-4c85-efe6-0916ebfdfca7","executionInfo":{"status":"ok","timestamp":1590142770216,"user_tz":-360,"elapsed":1529,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["a[j,2]"],"execution_count":95,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[10,  6],\n","       [10, 10]])"]},"metadata":{"tags":[]},"execution_count":95}]},{"cell_type":"code","metadata":{"id":"TeGs3ZNP4Sn0","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"outputId":"ef984c32-06fa-48a5-8bb6-63e22f8a0a7b","executionInfo":{"status":"ok","timestamp":1590142841755,"user_tz":-360,"elapsed":1651,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["a[:,j]"],"execution_count":96,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[ 2,  1],\n","        [ 2,  2]],\n","\n","       [[ 6,  5],\n","        [ 6,  6]],\n","\n","       [[10,  9],\n","        [10, 10]]])"]},"metadata":{"tags":[]},"execution_count":96}]},{"cell_type":"code","metadata":{"id":"QUiowP2w8fBP","colab_type":"code","colab":{}},"source":["time=np.linspace(20,145,5)\n","data=np.sin(np.arange(20).reshape(5,4))\n","ind=data.argmax(axis=0)\n","time_max=time[ind]"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"qh6lksMuAo8L","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":286},"outputId":"6f279510-c344-4216-9b90-6b6bfcd0b4bd","executionInfo":{"status":"ok","timestamp":1590146525828,"user_tz":-360,"elapsed":1180,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["import matplotlib.pyplot as plt\n","def mandelbrot(h,w,maxit=20):\n","  y,x=np.ogrid[-1.4:1.4:h*1j,-2:0.8:w*1j]\n","  c=x+y*1j\n","  z=c\n","  divtime=maxit+np.zeros(z.shape,dtype=int)\n","\n","  for i in range(maxit):\n","    z=z**2+c\n","    diverge=z*np.conj(z)>2**2\n","    div_now=diverge & (divtime==maxit)\n","    divtime[div_now]=i\n","    z[diverge]=2\n","\n","  return divtime\n","\n","plt.imshow(mandelbrot(400,400))"],"execution_count":103,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7fe1ae2f4978>"]},"metadata":{"tags":[]},"execution_count":103},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"1c-cOZmqJg7P","colab_type":"code","colab":{}},"source":["a=np.array([1,2,3,4])\n","b=np.array([4,9,10])\n","c=np.array([9,0,1,3,4,7])\n","ax,bx,cx=np.ix_(a,b,c)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"f5jGVwX-KNEq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":272},"outputId":"f67beb5b-46b0-4687-e550-648b358f75c7","executionInfo":{"status":"ok","timestamp":1590147322640,"user_tz":-360,"elapsed":947,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["result=ax+bx*cx\n","result"],"execution_count":108,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[37,  1,  5, 13, 17, 29],\n","        [82,  1, 10, 28, 37, 64],\n","        [91,  1, 11, 31, 41, 71]],\n","\n","       [[38,  2,  6, 14, 18, 30],\n","        [83,  2, 11, 29, 38, 65],\n","        [92,  2, 12, 32, 42, 72]],\n","\n","       [[39,  3,  7, 15, 19, 31],\n","        [84,  3, 12, 30, 39, 66],\n","        [93,  3, 13, 33, 43, 73]],\n","\n","       [[40,  4,  8, 16, 20, 32],\n","        [85,  4, 13, 31, 40, 67],\n","        [94,  4, 14, 34, 44, 74]]])"]},"metadata":{"tags":[]},"execution_count":108}]},{"cell_type":"code","metadata":{"id":"MJzpjCZ1KTps","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"3b4b5eeb-129e-49da-c336-93480c1c0bef","executionInfo":{"status":"ok","timestamp":1590147515926,"user_tz":-360,"elapsed":1025,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["a=np.arange(4).reshape(2,2)\n","a"],"execution_count":112,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 1],\n","       [2, 3]])"]},"metadata":{"tags":[]},"execution_count":112}]},{"cell_type":"code","metadata":{"id":"Nnk53WA3LYGh","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"ff2bff12-e358-4ef1-dc4b-c32965d26b92","executionInfo":{"status":"ok","timestamp":1590147544710,"user_tz":-360,"elapsed":967,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["a.transpose()"],"execution_count":115,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0, 2],\n","       [1, 3]])"]},"metadata":{"tags":[]},"execution_count":115}]},{"cell_type":"code","metadata":{"id":"zf9HMrXuLfJS","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"34db5f69-725c-4eca-a1d5-d612adca4f79","executionInfo":{"status":"ok","timestamp":1590147613304,"user_tz":-360,"elapsed":1205,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["np.linalg.inv(a)"],"execution_count":116,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-1.5,  0.5],\n","       [ 1. ,  0. ]])"]},"metadata":{"tags":[]},"execution_count":116}]},{"cell_type":"code","metadata":{"id":"30SVmYp5Lx9y","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":969},"outputId":"00ff6e90-b4b4-48de-a4b8-aa1cf97022e4","executionInfo":{"status":"ok","timestamp":1590147654604,"user_tz":-360,"elapsed":1039,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["help(np.trace)"],"execution_count":117,"outputs":[{"output_type":"stream","text":["Help on function trace in module numpy:\n","\n","trace(a, offset=0, axis1=0, axis2=1, dtype=None, out=None)\n","    Return the sum along diagonals of the array.\n","    \n","    If `a` is 2-D, the sum along its diagonal with the given offset\n","    is returned, i.e., the sum of elements ``a[i,i+offset]`` for all i.\n","    \n","    If `a` has more than two dimensions, then the axes specified by axis1 and\n","    axis2 are used to determine the 2-D sub-arrays whose traces are returned.\n","    The shape of the resulting array is the same as that of `a` with `axis1`\n","    and `axis2` removed.\n","    \n","    Parameters\n","    ----------\n","    a : array_like\n","        Input array, from which the diagonals are taken.\n","    offset : int, optional\n","        Offset of the diagonal from the main diagonal. Can be both positive\n","        and negative. Defaults to 0.\n","    axis1, axis2 : int, optional\n","        Axes to be used as the first and second axis of the 2-D sub-arrays\n","        from which the diagonals should be taken. Defaults are the first two\n","        axes of `a`.\n","    dtype : dtype, optional\n","        Determines the data-type of the returned array and of the accumulator\n","        where the elements are summed. If dtype has the value None and `a` is\n","        of integer type of precision less than the default integer\n","        precision, then the default integer precision is used. Otherwise,\n","        the precision is the same as that of `a`.\n","    out : ndarray, optional\n","        Array into which the output is placed. Its type is preserved and\n","        it must be of the right shape to hold the output.\n","    \n","    Returns\n","    -------\n","    sum_along_diagonals : ndarray\n","        If `a` is 2-D, the sum along the diagonal is returned.  If `a` has\n","        larger dimensions, then an array of sums along diagonals is returned.\n","    \n","    See Also\n","    --------\n","    diag, diagonal, diagflat\n","    \n","    Examples\n","    --------\n","    >>> np.trace(np.eye(3))\n","    3.0\n","    >>> a = np.arange(8).reshape((2,2,2))\n","    >>> np.trace(a)\n","    array([6, 8])\n","    \n","    >>> a = np.arange(24).reshape((2,2,2,3))\n","    >>> np.trace(a).shape\n","    (2, 3)\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"0kp2DhSyL58V","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"a608b277-ce31-43fd-9b09-408057f26094","executionInfo":{"status":"ok","timestamp":1590147711601,"user_tz":-360,"elapsed":820,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["np.trace(a)"],"execution_count":118,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{"tags":[]},"execution_count":118}]},{"cell_type":"code","metadata":{"id":"iR24lPXjMTB4","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"9ffb2d50-e164-4643-e5a3-715d744c91d0","executionInfo":{"status":"ok","timestamp":1590147829997,"user_tz":-360,"elapsed":1049,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["help(np.linalg.solve)"],"execution_count":119,"outputs":[{"output_type":"stream","text":["Help on function solve in module numpy.linalg:\n","\n","solve(a, b)\n","    Solve a linear matrix equation, or system of linear scalar equations.\n","    \n","    Computes the \"exact\" solution, `x`, of the well-determined, i.e., full\n","    rank, linear matrix equation `ax = b`.\n","    \n","    Parameters\n","    ----------\n","    a : (..., M, M) array_like\n","        Coefficient matrix.\n","    b : {(..., M,), (..., M, K)}, array_like\n","        Ordinate or \"dependent variable\" values.\n","    \n","    Returns\n","    -------\n","    x : {(..., M,), (..., M, K)} ndarray\n","        Solution to the system a x = b.  Returned shape is identical to `b`.\n","    \n","    Raises\n","    ------\n","    LinAlgError\n","        If `a` is singular or not square.\n","    \n","    Notes\n","    -----\n","    \n","    .. versionadded:: 1.8.0\n","    \n","    Broadcasting rules apply, see the `numpy.linalg` documentation for\n","    details.\n","    \n","    The solutions are computed using LAPACK routine ``_gesv``.\n","    \n","    `a` must be square and of full-rank, i.e., all rows (or, equivalently,\n","    columns) must be linearly independent; if either is not true, use\n","    `lstsq` for the least-squares best \"solution\" of the\n","    system/equation.\n","    \n","    References\n","    ----------\n","    .. [1] G. Strang, *Linear Algebra and Its Applications*, 2nd Ed., Orlando,\n","           FL, Academic Press, Inc., 1980, pg. 22.\n","    \n","    Examples\n","    --------\n","    Solve the system of equations ``3 * x0 + x1 = 9`` and ``x0 + 2 * x1 = 8``:\n","    \n","    >>> a = np.array([[3,1], [1,2]])\n","    >>> b = np.array([9,8])\n","    >>> x = np.linalg.solve(a, b)\n","    >>> x\n","    array([2.,  3.])\n","    \n","    Check that the solution is correct:\n","    \n","    >>> np.allclose(np.dot(a, x), b)\n","    True\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"rKVJMZ6QMkyd","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"370b9778-e74d-48a7-a17c-740284a88c85","executionInfo":{"status":"ok","timestamp":1590148082081,"user_tz":-360,"elapsed":1141,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["y=np.array([[5],[7]])\n","np.linalg.solve(a,y)"],"execution_count":120,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[-4.],\n","       [ 5.]])"]},"metadata":{"tags":[]},"execution_count":120}]},{"cell_type":"code","metadata":{"id":"vdT9wqjwNngq","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"c9fc488d-9393-4f95-ea83-abe0848e1cb1","executionInfo":{"status":"ok","timestamp":1590148120288,"user_tz":-360,"elapsed":1045,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["help(np.linalg.eig)"],"execution_count":121,"outputs":[{"output_type":"stream","text":["Help on function eig in module numpy.linalg:\n","\n","eig(a)\n","    Compute the eigenvalues and right eigenvectors of a square array.\n","    \n","    Parameters\n","    ----------\n","    a : (..., M, M) array\n","        Matrices for which the eigenvalues and right eigenvectors will\n","        be computed\n","    \n","    Returns\n","    -------\n","    w : (..., M) array\n","        The eigenvalues, each repeated according to its multiplicity.\n","        The eigenvalues are not necessarily ordered. The resulting\n","        array will be of complex type, unless the imaginary part is\n","        zero in which case it will be cast to a real type. When `a`\n","        is real the resulting eigenvalues will be real (0 imaginary\n","        part) or occur in conjugate pairs\n","    \n","    v : (..., M, M) array\n","        The normalized (unit \"length\") eigenvectors, such that the\n","        column ``v[:,i]`` is the eigenvector corresponding to the\n","        eigenvalue ``w[i]``.\n","    \n","    Raises\n","    ------\n","    LinAlgError\n","        If the eigenvalue computation does not converge.\n","    \n","    See Also\n","    --------\n","    eigvals : eigenvalues of a non-symmetric array.\n","    \n","    eigh : eigenvalues and eigenvectors of a real symmetric or complex\n","           Hermitian (conjugate symmetric) array.\n","    \n","    eigvalsh : eigenvalues of a real symmetric or complex Hermitian\n","               (conjugate symmetric) array.\n","    \n","    Notes\n","    -----\n","    \n","    .. versionadded:: 1.8.0\n","    \n","    Broadcasting rules apply, see the `numpy.linalg` documentation for\n","    details.\n","    \n","    This is implemented using the ``_geev`` LAPACK routines which compute\n","    the eigenvalues and eigenvectors of general square arrays.\n","    \n","    The number `w` is an eigenvalue of `a` if there exists a vector\n","    `v` such that ``dot(a,v) = w * v``. Thus, the arrays `a`, `w`, and\n","    `v` satisfy the equations ``dot(a[:,:], v[:,i]) = w[i] * v[:,i]``\n","    for :math:`i \\in \\{0,...,M-1\\}`.\n","    \n","    The array `v` of eigenvectors may not be of maximum rank, that is, some\n","    of the columns may be linearly dependent, although round-off error may\n","    obscure that fact. If the eigenvalues are all different, then theoretically\n","    the eigenvectors are linearly independent. Likewise, the (complex-valued)\n","    matrix of eigenvectors `v` is unitary if the matrix `a` is normal, i.e.,\n","    if ``dot(a, a.H) = dot(a.H, a)``, where `a.H` denotes the conjugate\n","    transpose of `a`.\n","    \n","    Finally, it is emphasized that `v` consists of the *right* (as in\n","    right-hand side) eigenvectors of `a`.  A vector `y` satisfying\n","    ``dot(y.T, a) = z * y.T`` for some number `z` is called a *left*\n","    eigenvector of `a`, and, in general, the left and right eigenvectors\n","    of a matrix are not necessarily the (perhaps conjugate) transposes\n","    of each other.\n","    \n","    References\n","    ----------\n","    G. Strang, *Linear Algebra and Its Applications*, 2nd Ed., Orlando, FL,\n","    Academic Press, Inc., 1980, Various pp.\n","    \n","    Examples\n","    --------\n","    >>> from numpy import linalg as LA\n","    \n","    (Almost) trivial example with real e-values and e-vectors.\n","    \n","    >>> w, v = LA.eig(np.diag((1, 2, 3)))\n","    >>> w; v\n","    array([1., 2., 3.])\n","    array([[1., 0., 0.],\n","           [0., 1., 0.],\n","           [0., 0., 1.]])\n","    \n","    Real matrix possessing complex e-values and e-vectors; note that the\n","    e-values are complex conjugates of each other.\n","    \n","    >>> w, v = LA.eig(np.array([[1, -1], [1, 1]]))\n","    >>> w; v\n","    array([1.+1.j, 1.-1.j])\n","    array([[0.70710678+0.j        , 0.70710678-0.j        ],\n","           [0.        -0.70710678j, 0.        +0.70710678j]])\n","    \n","    Complex-valued matrix with real e-values (but complex-valued e-vectors);\n","    note that ``a.conj().T == a``, i.e., `a` is Hermitian.\n","    \n","    >>> a = np.array([[1, 1j], [-1j, 1]])\n","    >>> w, v = LA.eig(a)\n","    >>> w; v\n","    array([2.+0.j, 0.+0.j])\n","    array([[ 0.        +0.70710678j,  0.70710678+0.j        ], # may vary\n","           [ 0.70710678+0.j        , -0.        +0.70710678j]])\n","    \n","    Be careful about round-off error!\n","    \n","    >>> a = np.array([[1 + 1e-9, 0], [0, 1 - 1e-9]])\n","    >>> # Theor. e-values are 1 +/- 1e-9\n","    >>> w, v = LA.eig(a)\n","    >>> w; v\n","    array([1., 1.])\n","    array([[1., 0.],\n","           [0., 1.]])\n","\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"VQJNdx41PK90","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"422ebe6b-ddca-48f5-8a5c-155092cc6605","executionInfo":{"status":"ok","timestamp":1590148551866,"user_tz":-360,"elapsed":1825,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["np.linalg.eig(a)"],"execution_count":122,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([-0.56155281,  3.56155281]), array([[-0.87192821, -0.27032301],\n","        [ 0.48963374, -0.96276969]]))"]},"metadata":{"tags":[]},"execution_count":122}]},{"cell_type":"code","metadata":{"id":"uvNKBrINPUW_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":51},"outputId":"1aca5e70-b0de-4bf0-f670-6658547f5ea6","executionInfo":{"status":"ok","timestamp":1590148640501,"user_tz":-360,"elapsed":1308,"user":{"displayName":"Toufick E Elahi","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhGcDn6XCEXdHSyqLxaDP-i4_RgP_WawZJB2ZPp=s64","userId":"14580591880337586636"}}},"source":["a=[[-1,0],[0,-1]]\n","np.linalg.eig(a)"],"execution_count":124,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(array([-1., -1.]), array([[1., 0.],\n","        [0., 1.]]))"]},"metadata":{"tags":[]},"execution_count":124}]},{"cell_type":"code","metadata":{"id":"xnlDIxG2PmTR","colab_type":"code","colab":{}},"source":[""],"execution_count":0,"outputs":[]}]}